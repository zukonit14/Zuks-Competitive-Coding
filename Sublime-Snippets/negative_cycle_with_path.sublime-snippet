<snippet>
	<content><![CDATA[
//Bellman Ford (with Path Printing of the negative cycle):

struct Edge
{
	int u, v, cost;	
};

int n, m;
vector<Edge> edges;

bool negativeCycle() //Return true if there is a negative cycle in the graph
{
	vector<int> dist(n+1, 0);
	vector<int> par(n, -1);
	int x;
	for(int i=1;i<=n;i++)
	{
		x=-1;
		for(auto &e:edges)
		{
			if(dist[e.u] + e.cost < dist[e.v])
			{
				dist[e.v] = dist[e.u] + e.cost;
				par[e.v] = e.u;
				x = e.v;
			}
		}
	}

	if(x==-1)
		return 0;
	else
	{
		for(int i=1;i<=n;i++)
			x=par[x];
		vector<int> cycle;
		for(int v=x;;v=par[v])
		{
			cycle.push_back(v);
			if(v==x && cycle.size()>1)
				break;
		}
		reverse(cycle.begin(), cycle.end());
		cout<<"Negative cycle: ";
		for(auto &it:cycle)
			cout<<it<<" ";
		cout<<endl;
		return 1;
	}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>neg_cycle_path</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
